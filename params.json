{"name":"HatcHTTP","tagline":"A better HTTP client for Android used in almost 10 production apps","body":"# HatcHttp\r\n\r\nHatcHttp is a very simple and straightforward library for performing HTTP call inside your\r\nAndroid app. ~~This library is based on Netty~~\r\n\r\n### Removed netty based solution.\r\n\r\nWe were facing an issue related with 65k+ method issue. So now this library uses Volley.\r\n \r\n## Features\r\n\r\n~~1. Based on Java NIO (thanks to netty and asynchttp)~~\r\n\r\n1. Asynchronous API calls, runs on a separate thread pool (ExecutorService)\r\n2. Uses network library used inside the Android framework.\r\n\r\n~~## What is different ?~~\r\n\r\n~~### Based on Netty~~\r\n\r\n~~This version of HatchHttp is based on Netty and leverage the advantage of NIO.~~\r\n\r\n## How to use ?\r\n\r\n1. Add the repository\r\n```gradle\r\n    maven {\r\n            url 'https://github.com/RainingClouds/hatchttp_maven_repo/raw/master/'\r\n    }\r\n```\r\n2. Add the dependency\r\n```gradle\r\n    compile 'hatchttp:library:1.3.7'\r\n```\r\nAdd following permissions in your AndroidManifest.xml\r\n```xml\r\n    <uses-permission android:name=\"android.permission.INTERNET\"/>\r\n    <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\"/>\r\n```\r\n \r\n### Code\r\nExample code for getting Google Home Page\r\n```java\r\n    HatcHttpRequest.GET(\"http://www.google.com\")\r\n                .addHeader(\"Accept\", \"text/html\")\r\n                .execute(new HatcHttpRequestListener() {\r\n            @Override\r\n            public void onComplete(int status, final String response) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onException(Throwable throwable) {\r\n\r\n            }\r\n        });\r\n```\r\n\r\nIf you want encoded json response use HatcHttpJSONListener which has following listener design.\r\n```java\r\n    public interface HatcHttpJSONListener {\r\n        void onComplete(final int status, final JSONObject response);\r\n        void onException(final Throwable throwable);\r\n    }\r\n```\r\n\r\n\r\n# Developer\r\n\r\nAkshay Deo (akshay@rainingclouds.com)\r\nRainingClouds Technologies Pvt Ltd\r\n\r\n# Licence \r\n\r\nThe MIT License (MIT)\r\n\r\nCopyright (c) 2014 Akshay Deo\r\nCopyright (c) 2014 RainingClouds Technologies Private Limited\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}